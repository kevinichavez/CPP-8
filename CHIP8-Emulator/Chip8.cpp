#include "Chip8.h"

const uint16_t CH8_FONTSET[80] = {
  0xF0, 0x90, 0x90, 0x90, 0xF0, // 0
  0x20, 0x60, 0x20, 0x20, 0x70, // 1
  0xF0, 0x10, 0xF0, 0x80, 0xF0, // 2
  0xF0, 0x10, 0xF0, 0x10, 0xF0, // 3
  0x90, 0x90, 0xF0, 0x10, 0x10, // 4
  0xF0, 0x80, 0xF0, 0x10, 0xF0, // 5
  0xF0, 0x80, 0xF0, 0x90, 0xF0, // 6
  0xF0, 0x10, 0x20, 0x40, 0x40, // 7
  0xF0, 0x90, 0xF0, 0x90, 0xF0, // 8
  0xF0, 0x90, 0xF0, 0x10, 0xF0, // 9
  0xF0, 0x90, 0xF0, 0x90, 0x90, // A
  0xE0, 0x90, 0xE0, 0x90, 0xE0, // B
  0xF0, 0x80, 0x80, 0x80, 0xF0, // C
  0xE0, 0x90, 0x90, 0x90, 0xE0, // D
  0xF0, 0x80, 0xF0, 0x80, 0xF0, // E
  0xF0, 0x80, 0xF0, 0x80, 0x80  // F
};

Chip8::Chip8() {
	for (int i = 0; i < 0x200; i++)				// Clear first 0x200 bytes of memory
		m_memory[i] = 0;
	for (int i = 0; i < 80; i++)				// Load in fontset
		m_memory[i] = CH8_FONTSET[i];
}

void Chip8::init() {
	m_pc = 0x200;								// Program counter starts at 0x200
	m_opcode = 0;								// Reset opcode
	m_I = 0;									// Reset index reg
	m_sp = 0;									// Reset stack pointer
	clearDisp();								// Clear display
	for (int i = 0; i < 0xF; i++)				// Clear registers
		m_V[i] = 0;
	for (int i = 0; i < STACK_SIZE; i++)		// Clear stack
		m_stack[i] = 0;
	for (int i = m_pc; i < CH8_MEM_SIZE; i++)	// Clear memory
		m_memory[i] = 0;
	m_dTimer = 0;								// Reset delay timer
	m_sTimer = 0;								// Reset sound timer
	for (int i = 0; i < 0xF; i++)				// Reset key state
		m_keys[i] = false;
}

void Chip8::clearDisp() {
	for (int i = 0; i < CH8_RESOLUTION; i++)
		m_gfx[i] = false;
}
